 %%%%%%%%%%%%%%%%%%%%%  input settings  %%%%%%%%%%%%%%%%%%
 
 	net.hyperParam.sizeFmInput = [28 28]; 	% size of input feature map
 	net.hyperParam.numFmInput  = 1;        	% number of feature map of the input
 
 %%%%%%%%%%%%%%%%%%%%%  Layers specification %%%%%%%%%%%%%%%%%%
 
 	net.layers{end+1}.properties = struct('type',2,'numFm',4  ,'kernel',4,'pad',2);
 	net.layers{end+1}.properties = struct('type',2,'numFm',5 ,'kernel',6);
 	net.layers{end+1}.properties = struct('type',1,'numFm',60);
 	net.layers{end+1}.properties = struct('type',1,'numFm',5);
 
 %%%%%%%%%%%%%%%%%%%%%  Hyper params - training %%%%%%%%%%%%%%%%%%
 
 	net.hyperParam.trainLoopCount = 10000;		%on how many images to train before evaluating the network
 	net.hyperParam.testImageNum   = 20000;   	% after each loop, on how many images to evaluate network performance
 	net.hyperParam.ni_initial     = 0.05;		% ni to start training process
 	net.hyperParam.ni_final       = 0.0025;	        % final ni to stop the training process
 
 
